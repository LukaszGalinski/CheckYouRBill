// Generated by view binder compiler. Do not edit!
package com.galinski.lukasz.checkbill.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.galinski.lukasz.checkbill.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.button.MaterialButton;
import devs.mulham.horizontalcalendar.HorizontalCalendarView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainMenuBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton addCategoryBtn;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final ImageButton buttonAdd;

  @NonNull
  public final ImageButton buttonMinus;

  @NonNull
  public final EditText editText;

  @NonNull
  public final TextView endLabel;

  @NonNull
  public final View grayBackground;

  @NonNull
  public final Guideline guidelineCenter;

  @NonNull
  public final Guideline guidelineEnd;

  @NonNull
  public final Guideline guidelineHorizontalIncome;

  @NonNull
  public final Guideline guidelineStart;

  @NonNull
  public final HorizontalCalendarView horizontalCalendar;

  @NonNull
  public final TextView incomeAmount;

  @NonNull
  public final View incomeAndExpenses;

  @NonNull
  public final TextView moneySaved;

  @NonNull
  public final TextView outcomeAmount;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  private MainMenuBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton addCategoryBtn, @NonNull AppBarLayout appBar,
      @NonNull ImageButton buttonAdd, @NonNull ImageButton buttonMinus, @NonNull EditText editText,
      @NonNull TextView endLabel, @NonNull View grayBackground, @NonNull Guideline guidelineCenter,
      @NonNull Guideline guidelineEnd, @NonNull Guideline guidelineHorizontalIncome,
      @NonNull Guideline guidelineStart, @NonNull HorizontalCalendarView horizontalCalendar,
      @NonNull TextView incomeAmount, @NonNull View incomeAndExpenses, @NonNull TextView moneySaved,
      @NonNull TextView outcomeAmount, @NonNull RecyclerView recyclerView,
      @NonNull TextView textView, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.addCategoryBtn = addCategoryBtn;
    this.appBar = appBar;
    this.buttonAdd = buttonAdd;
    this.buttonMinus = buttonMinus;
    this.editText = editText;
    this.endLabel = endLabel;
    this.grayBackground = grayBackground;
    this.guidelineCenter = guidelineCenter;
    this.guidelineEnd = guidelineEnd;
    this.guidelineHorizontalIncome = guidelineHorizontalIncome;
    this.guidelineStart = guidelineStart;
    this.horizontalCalendar = horizontalCalendar;
    this.incomeAmount = incomeAmount;
    this.incomeAndExpenses = incomeAndExpenses;
    this.moneySaved = moneySaved;
    this.outcomeAmount = outcomeAmount;
    this.recyclerView = recyclerView;
    this.textView = textView;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.main_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_category_btn;
      MaterialButton addCategoryBtn = rootView.findViewById(id);
      if (addCategoryBtn == null) {
        break missingId;
      }

      id = R.id.appBar;
      AppBarLayout appBar = rootView.findViewById(id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.button_add;
      ImageButton buttonAdd = rootView.findViewById(id);
      if (buttonAdd == null) {
        break missingId;
      }

      id = R.id.button_minus;
      ImageButton buttonMinus = rootView.findViewById(id);
      if (buttonMinus == null) {
        break missingId;
      }

      id = R.id.editText;
      EditText editText = rootView.findViewById(id);
      if (editText == null) {
        break missingId;
      }

      id = R.id.end_label;
      TextView endLabel = rootView.findViewById(id);
      if (endLabel == null) {
        break missingId;
      }

      id = R.id.gray_background;
      View grayBackground = rootView.findViewById(id);
      if (grayBackground == null) {
        break missingId;
      }

      id = R.id.guideline_center;
      Guideline guidelineCenter = rootView.findViewById(id);
      if (guidelineCenter == null) {
        break missingId;
      }

      id = R.id.guideline_end;
      Guideline guidelineEnd = rootView.findViewById(id);
      if (guidelineEnd == null) {
        break missingId;
      }

      id = R.id.guideline_horizontal_income;
      Guideline guidelineHorizontalIncome = rootView.findViewById(id);
      if (guidelineHorizontalIncome == null) {
        break missingId;
      }

      id = R.id.guideline_start;
      Guideline guidelineStart = rootView.findViewById(id);
      if (guidelineStart == null) {
        break missingId;
      }

      id = R.id.horizontal_calendar;
      HorizontalCalendarView horizontalCalendar = rootView.findViewById(id);
      if (horizontalCalendar == null) {
        break missingId;
      }

      id = R.id.income_amount;
      TextView incomeAmount = rootView.findViewById(id);
      if (incomeAmount == null) {
        break missingId;
      }

      id = R.id.incomeAndExpenses;
      View incomeAndExpenses = rootView.findViewById(id);
      if (incomeAndExpenses == null) {
        break missingId;
      }

      id = R.id.money_saved;
      TextView moneySaved = rootView.findViewById(id);
      if (moneySaved == null) {
        break missingId;
      }

      id = R.id.outcome_amount;
      TextView outcomeAmount = rootView.findViewById(id);
      if (outcomeAmount == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = rootView.findViewById(id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = rootView.findViewById(id);
      if (textView2 == null) {
        break missingId;
      }

      return new MainMenuBinding((ConstraintLayout) rootView, addCategoryBtn, appBar, buttonAdd,
          buttonMinus, editText, endLabel, grayBackground, guidelineCenter, guidelineEnd,
          guidelineHorizontalIncome, guidelineStart, horizontalCalendar, incomeAmount,
          incomeAndExpenses, moneySaved, outcomeAmount, recyclerView, textView, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
